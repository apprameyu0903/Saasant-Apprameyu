/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-05-18 06:15:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class customer_005fdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1747165379000L));
    _jspx_dependants.put("jar:file:/Users/apprameyubharath/Saasant-Apprameyu/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BillingSystemWebProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Customer List</title>\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    ");
      out.write("\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("    <header class=\"page-header\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <span class=\"header-title\">Billing System</span>\n");
      out.write("        </div>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <div class=\"container mt-4\">\n");
      out.write("        <div class=\"content-wrapper\">\n");
      out.write("            <div class=\"d-flex justify-content-between align-items-center mb-3 title-section\">\n");
      out.write("                <h1 class=\"page-title mb-0\">Customer Management</h1>\n");
      out.write("                <a href=\"CustomerServlet?action=showAddForm\" class=\"btn btn-primary add-customer-btn\">Add New Customer</a>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            <div id=\"ajaxAlertPlaceholder\"></div>\n");
      out.write("\n");
      out.write("            <div class=\"search-bar-container\">\n");
      out.write("                <div class=\"form-group\">\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"customerSearchInput\" placeholder=\"Search customers by Name, ID, Mobile, or Location...\">\n");
      out.write("                    <div id=\"customerSuggestionsDropdown\" class=\"list-group\" style=\"display: none;\">\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"table-container\">\n");
      out.write("                <table class=\"table table-striped customer-table\" id=\"customerTable\">\n");
      out.write("                    <thead class=\"thead-dark\">\n");
      out.write("                        <tr>\n");
      out.write("                            <th>ID</th>\n");
      out.write("                            <th>Name</th>\n");
      out.write("                            <th>Mobile</th>\n");
      out.write("                            <th>Location</th>\n");
      out.write("                            <th>Actions</th>\n");
      out.write("                        </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody>\n");
      out.write("                       <!--  ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                         <tr id=\"noResultsRow\" style=\"display: none;\">\n");
      out.write("                            <td colspan=\"5\" class=\"text-center\">No customers found matching your search.</td>\n");
      out.write("                        </tr>-->\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"modal fade\" id=\"editCustomerModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"editCustomerModalLabel\" aria-hidden=\"true\">\n");
      out.write("        <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <form id=\"editCustomerForm\">\n");
      out.write("                    <div class=\"modal-header\">\n");
      out.write("                        <h5 class=\"modal-title\" id=\"editCustomerModalLabel\">Edit Customer</h5>\n");
      out.write("                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
      out.write("                            <span aria-hidden=\"true\">&times;</span>\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-body\">\n");
      out.write("                        <input type=\"hidden\" id=\"editCustomerId\" name=\"customerId\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"editCustomerName\">Name</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"editCustomerName\" name=\"customerName\" required>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"editMobileNumber\">Mobile Number</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"editMobileNumber\" name=\"mobileNumber\" required pattern=\"[0-9]{10,15}\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label for=\"editCustomerLocation\">Location</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"editCustomerLocation\" name=\"customerLocation\" required>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-footer\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary\">Save changes</button>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <footer class=\"page-footer\">\n");
      out.write("        <p>&copy; <script>document.write(new Date().getFullYear())</script> Billing System. All rights reserved.</p>\n");
      out.write("    </footer>\n");
      out.write("\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js\"></script>\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("    // API endpoint for customer data\n");
      out.write("    const API_BASE_URL = 'http://localhost:8081/api/customers';\n");
      out.write("\n");
      out.write("    $(document).ready(initializePage);\n");
      out.write("\n");
      out.write("    function initializePage() {\n");
      out.write("        setTimeout(fadeOutMessages, 3000); \n");
      out.write("        $(\"#customerSearchInput\").on(\"keyup\", debounce(handleCustomerSearchInputKeyup, 300));\n");
      out.write("        $(\"#customerSuggestionsDropdown\").on(\"click\", \".suggestion-item\", handleSuggestionItemClick);\n");
      out.write("        $(document).on(\"click\", handleDocumentClickForSuggestions);\n");
      out.write("        $(\"#customerSearchInput\").on(\"focus\", handleCustomerSearchInputFocus);\n");
      out.write("        $(\"#customerTable\").on(\"click\", \".delete-link\", handleDeleteLinkClick);\n");
      out.write("        $(\"#customerTable\").on(\"click\", \".edit-link\", handleEditLinkClick);\n");
      out.write("        $(\"#editCustomerForm\").on(\"submit\", handleEditFormSubmit);\n");
      out.write("        getAndShowCustomers(\"\"); \n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function debounce(func, delay) {\n");
      out.write("        let timeout;\n");
      out.write("        return function(...args) {\n");
      out.write("            clearTimeout(timeout);\n");
      out.write("            timeout = setTimeout(() => func.apply(this, args), delay);\n");
      out.write("        };\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function fadeOutMessages() {\n");
      out.write("        $(\"#successMessageDiv, #errorMessageDiv\").fadeOut(\"slow\");\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function showAlertRevised(messageText, alertType) {\n");
      out.write("        const alertBoxArea = $(\"#ajaxAlertPlaceholder\");\n");
      out.write("        alertBoxArea.html(''); // Clear previous alerts\n");
      out.write("        const newAlertHtml =\n");
      out.write("            `<div class=\"alert alert-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${alertType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" alert-dismissible fade show\" role=\"alert\">\n");
      out.write("                ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${messageText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
      out.write("            </div>`;\n");
      out.write("        alertBoxArea.html(newAlertHtml);\n");
      out.write("        setTimeout(function() {\n");
      out.write("            alertBoxArea.find(\".alert\").fadeOut(\"slow\", function() { $(this).remove(); });\n");
      out.write("        }, 3000);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleCustomerSearchInputKeyup() {\n");
      out.write("        const searchInputValue = $(\"#customerSearchInput\").val().trim().toLowerCase();\n");
      out.write("        getAndShowCustomers(searchInputValue);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function getAndShowCustomers(searchText) {\n");
      out.write("        let ajaxData = {};\n");
      out.write("        if (searchText) {\n");
      out.write("            ajaxData.query = searchText;\n");
      out.write("        }\n");
      out.write("        $.ajax({\n");
      out.write("            url: API_BASE_URL,\n");
      out.write("            type: \"GET\",\n");
      out.write("            data: ajaxData,\n");
      out.write("            dataType: \"json\",\n");
      out.write("            success: function(customersFromServer) {\n");
      out.write("                console.log(customersFromServer);\n");
      out.write("                fillCustomerTable(customersFromServer);\n");
      out.write("\n");
      out.write("                if (searchText) {\n");
      out.write("                    fillSuggestionsBox(customersFromServer, searchText);\n");
      out.write("                } else {\n");
      out.write("                    $(\"#customerSuggestionsDropdown\").html(\"\").hide();\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function(xhr) {\n");
      out.write("                console.error(\"AJAX Error fetching customers:\", xhr.status, xhr.responseText);\n");
      out.write("                showAlertRevised(\"Oops! Something went wrong while fetching customer data.\", \"danger\");\n");
      out.write("                $(\"#customerTable tbody\").html('');\n");
      out.write("                showNoResultsMessage(\"Error loading customer data. Please try again.\");\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function fillCustomerTable(customersList) {\n");
      out.write("        console.log(customersList);\n");
      out.write("        var tableBodyElement = $(\"#customerTable tbody\");\n");
      out.write("        tableBodyElement.empty();\n");
      out.write("\n");
      out.write("        if (customersList && customersList.length > 0) {\n");
      out.write("            $(\"#noResultsRow\").hide();\n");
      out.write("            customersList.forEach(function(oneCustomer) {\n");
      out.write("                console.log(oneCustomer);\n");
      out.write("                var displayId = oneCustomer.customerId;\n");
      out.write("                console.log(displayId);\n");
      out.write("                var displayName = oneCustomer.customerName;\n");
      out.write("                var displayMobile = oneCustomer.mobileNumber;\n");
      out.write("                var displayLocation = oneCustomer.customerLocation;\n");
      out.write("                var tableRowHtml = `\n");
      out.write("                    <tr id=\"customerRow-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"> \n");
      out.write("                        <td>`+displayId+`</td>\n");
      out.write("                        <td class=\"name\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${displayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                        <td class=\"mobile\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${displayMobile}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                        <td class=\"location\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${displayLocation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("                        <td>\n");
      out.write("                            <a class=\"action-link edit-link text-primary mr-2\" href=\"#\" data-id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Edit</a>\n");
      out.write("                            <a class=\"action-link delete-link text-danger\" href=\"#\" data-id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Delete</a>\n");
      out.write("                        </td>\n");
      out.write("                    </tr>`;\n");
      out.write("                tableBodyElement.append(tableRowHtml);\n");
      out.write("            });\n");
      out.write("        } else {\n");
      out.write("            const message = $(\"#customerSearchInput\").val().trim() ? \"No customers found matching your search.\" : \"No customers available.\";\n");
      out.write("            showNoResultsMessage(message);\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function showNoResultsMessage(message) {\n");
      out.write("        const tableBodyElement = $(\"#customerTable tbody\");\n");
      out.write("        if (tableBodyElement.find(\"#noResultsRow\").length === 0) {\n");
      out.write("             tableBodyElement.append('<tr id=\"noResultsRow\"><td colspan=\"5\" class=\"text-center\"></td></tr>');\n");
      out.write("        }\n");
      out.write("        $(\"#noResultsRow td\").text(message);\n");
      out.write("        $(\"#noResultsRow\").show();\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function fillSuggestionsBox(customersList, currentSearchText) {\n");
      out.write("        const suggestionsDiv = $(\"#customerSuggestionsDropdown\");\n");
      out.write("        suggestionsDiv.empty().hide();\n");
      out.write("\n");
      out.write("        if (currentSearchText && currentSearchText.length > 0 && customersList && customersList.length > 0) {\n");
      out.write("            let displayedCount = 0;\n");
      out.write("            const maxSuggestions = 7;\n");
      out.write("            const relevantCustomers = customersList.filter(customer =>\n");
      out.write("                (customer.customerName && customer.customerName.toLowerCase().includes(currentSearchText)) ||\n");
      out.write("                (String(customer.customerId).toLowerCase().includes(currentSearchText))\n");
      out.write("            );\n");
      out.write("\n");
      out.write("            for (let i = 0; i < relevantCustomers.length && displayedCount < maxSuggestions; i++) {\n");
      out.write("                const oneCustomer = relevantCustomers[i];\n");
      out.write("                const suggestionLinkHtml =\n");
      out.write("                    `<a href=\"#\" class=\"list-group-item list-group-item-action suggestion-item\" data-id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" data-name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("                        ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" (ID: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${oneCustomer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")\n");
      out.write("                     </a>`;\n");
      out.write("                suggestionsDiv.append(suggestionLinkHtml);\n");
      out.write("                displayedCount++;\n");
      out.write("            }\n");
      out.write("            if (displayedCount > 0) {\n");
      out.write("                suggestionsDiv.show();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleSuggestionItemClick(event) {\n");
      out.write("        event.preventDefault();\n");
      out.write("        const customerName = $(this).data(\"name\");\n");
      out.write("        $(\"#customerSearchInput\").val(customerName);\n");
      out.write("        $(\"#customerSuggestionsDropdown\").empty().hide();\n");
      out.write("        getAndShowCustomers(customerName.toLowerCase());\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleDocumentClickForSuggestions(event) {\n");
      out.write("        if (!$(event.target).closest(\".search-bar-container\").length) {\n");
      out.write("            $(\"#customerSuggestionsDropdown\").empty().hide();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleCustomerSearchInputFocus() {\n");
      out.write("        const currentSearchText = $(\"#customerSearchInput\").val().trim().toLowerCase();\n");
      out.write("        if (currentSearchText.length >= 1) {\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleDeleteLinkClick(event) {\n");
      out.write("        event.preventDefault();\n");
      out.write("        const customerIdToDelete = $(this).data(\"id\");\n");
      out.write("        const customerName = $(this).closest(\"tr\").find(\".name\").text();\n");
      out.write("\n");
      out.write("        if (confirm(`Are you sure you want to delete customer: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" (ID: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerIdToDelete}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")?`)) {\n");
      out.write("            $.ajax({\n");
      out.write("                url: `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE_URL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerIdToDelete}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`,\n");
      out.write("                type: \"DELETE\",\n");
      out.write("                success: function(response, status, xhr) {\n");
      out.write("                    $(\"#customerRow-\" + customerIdToDelete).remove();\n");
      out.write("                    showAlertRevised(`Customer ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" deleted successfully.`, \"success\");\n");
      out.write("                    if ($(\"#customerTable tbody tr:not(#noResultsRow)\").length === 0) {\n");
      out.write("                         showNoResultsMessage(\"No customers available.\");\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error: function(xhr) {\n");
      out.write("                    console.error(\"Delete error:\", xhr.status, xhr.responseText);\n");
      out.write("                    let errorMsg = \"Could not delete the customer.\";\n");
      out.write("                    if (xhr.responseJSON && xhr.responseJSON.message) {\n");
      out.write("                        errorMsg = xhr.responseJSON.message;\n");
      out.write("                    } else if (xhr.status === 404) {\n");
      out.write("                        errorMsg = \"Customer not found for deletion.\";\n");
      out.write("                    } else if (xhr.statusText) {\n");
      out.write("                         errorMsg += \" Server responded: \" + xhr.statusText;\n");
      out.write("                    }\n");
      out.write("                    showAlertRevised(errorMsg, \"danger\");\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleEditLinkClick(event) {\n");
      out.write("        event.preventDefault();\n");
      out.write("        const customerIdToEdit = $(this).data(\"id\");\n");
      out.write("        $.ajax({\n");
      out.write("            url: `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE_URL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerIdToEdit}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, \n");
      out.write("            type: \"PUT\",\n");
      out.write("            dataType: \"json\",\n");
      out.write("            success: function(customerDataFromServer) {\n");
      out.write("                if (customerDataFromServer && customerDataFromServer.customerId) {\n");
      out.write("                    $(\"#editCustomerId\").val(customerDataFromServer.customerId);\n");
      out.write("                    $(\"#editCustomerName\").val(customerDataFromServer.customerName);\n");
      out.write("                    $(\"#editMobileNumber\").val(customerDataFromServer.mobileNumber);\n");
      out.write("                    $(\"#editCustomerLocation\").val(customerDataFromServer.customerLocation);\n");
      out.write("                    $(\"#editCustomerModal\").modal(\"show\");\n");
      out.write("                } else {\n");
      out.write("                    showAlertRevised(\"Customer data not found or could not be retrieved.\", \"warning\");\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function(xhr) {\n");
      out.write("                 console.error(\"Edit fetch error:\", xhr.status, xhr.responseText);\n");
      out.write("                 let errorMsg = \"Could not retrieve customer details for editing.\";\n");
      out.write("                 if(xhr.status === 404){\n");
      out.write("                    errorMsg = \"Customer not found.\";\n");
      out.write("                 }\n");
      out.write("                showAlertRevised(errorMsg, \"danger\");\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function handleEditFormSubmit(event) {\n");
      out.write("        event.preventDefault();\n");
      out.write("        const customerId = $(\"#editCustomerId\").val();\n");
      out.write("        const customerData = {\n");
      out.write("            customerName: $(\"#editCustomerName\").val(),\n");
      out.write("            mobileNumber: $(\"#editMobileNumber\").val(),\n");
      out.write("            customerLocation: $(\"#editCustomerLocation\").val()\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        $.ajax({\n");
      out.write("            url: `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE_URL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`,\n");
      out.write("            type: \"PUT\",\n");
      out.write("            contentType: \"application/json\",    \n");
      out.write("            data: JSON.stringify(customerData), \n");
      out.write("            dataType: \"json\",                \n");
      out.write("            success: function(updatedCustomerInfo) {\n");
      out.write("                $(\"#editCustomerModal\").modal(\"hide\");\n");
      out.write("                showAlertRevised(`Customer ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${updatedCustomerInfo.customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" updated successfully.`, \"success\");\n");
      out.write("\n");
      out.write("\n");
      out.write("                const customerRowInTable = $(`#customerRow-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${updatedCustomerInfo.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\n");
      out.write("                if (customerRowInTable.length) {\n");
      out.write("                    customerRowInTable.find(\".name\").text(updatedCustomerInfo.customerName || \"N/A\");\n");
      out.write("                    customerRowInTable.find(\".mobile\").text(updatedCustomerInfo.mobileNumber || \"N/A\");\n");
      out.write("                    customerRowInTable.find(\".location\").text(updatedCustomerInfo.customerLocation || \"N/A\");\n");
      out.write("                } else {\n");
      out.write("                    getAndShowCustomers(\"\");\n");
      out.write("                }\n");
      out.write("            },\n");
      out.write("            error: function(xhr) {\n");
      out.write("                console.error(\"Update error:\", xhr.status, xhr.responseText);\n");
      out.write("                let errorMsg = \"Could not update customer.\";\n");
      out.write("                 if (xhr.responseJSON && xhr.responseJSON.message) {\n");
      out.write("                    errorMsg = xhr.responseJSON.message;\n");
      out.write("                } else if (xhr.status === 404) {\n");
      out.write("                     errorMsg = \"Customer not found for update.\";\n");
      out.write("                } else if (xhr.status === 400) {\n");
      out.write("                     errorMsg = \"Invalid data submitted for update. Please check fields.\";\n");
      out.write("                }\n");
      out.write("                showAlertRevised(errorMsg, \"danger\");\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /customer_details.jsp(27,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty successMessage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\" id=\"successMessageDiv\">\n");
        out.write("                    ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${successMessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\n");
        out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
        out.write("                </div>\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /customer_details.jsp(33,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty errorMessage}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\" id=\"errorMessageDiv\">\n");
        out.write("                    ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\n");
        out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n");
        out.write("                </div>\n");
        out.write("            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /customer_details.jsp(61,29) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("customer");
    // /customer_details.jsp(61,29) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/customer_details.jsp(61,29) '${customers}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${customers}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <tr id=\"customerRow-");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\n");
          out.write("                                <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                <td class=\"name\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                <td class=\"mobile\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.mobileNumber}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                <td class=\"location\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerLocation}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                <td>\n");
          out.write("                                    <a class=\"action-link edit-link text-primary mr-2\" data-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">Edit</a>\n");
          out.write("                                    <a class=\"action-link delete-link text-danger\" data-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${customer.customerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">Delete</a>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
    }
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    return false;
  }
}
