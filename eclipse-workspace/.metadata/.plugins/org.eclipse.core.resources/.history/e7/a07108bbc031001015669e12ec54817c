<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Customer List</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <%-- Link to your existing style.css if it's not already included via Bootstrap or if it has specific styles you need --%>
    <link rel="stylesheet" type="text/css" href="${pageContext.request.contextPath}/style.css">
</head>
<body>

    <header class="page-header">
        <div class="container">
            <span class="header-title">Billing System</span>
        </div>
    </header>

    <div class="container mt-4">
        <div class="content-wrapper">
            <div class="d-flex justify-content-between align-items-center mb-3 title-section">
                <h1 class="page-title mb-0">Customer Management</h1>
                <a href="CustomerServlet?action=showAddForm" class="btn btn-primary add-customer-btn">Add New Customer</a>
            </div>

            <c:if test="${not empty successMessage}">
                <div class="alert alert-success alert-dismissible fade show" role="alert" id="successMessageDiv">
                    ${successMessage}
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
            </c:if>
            <c:if test="${not empty errorMessage}">
                <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorMessageDiv">
                    ${errorMessage}
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
            </c:if>
            <div id="ajaxAlertPlaceholder"></div>

            <div class="search-bar-container">
                <div class="form-group">
                    <input type="text" class="form-control" id="customerSearchInput" placeholder="Search customers by Name, ID, Mobile, or Location...">
                    <div id="customerSuggestionsDropdown" class="list-group" style="display: none;">
                    </div>
                </div>
            </div>

            <div class="table-container">
                <table class="table table-striped customer-table" id="customerTable">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Mobile</th>
                            <th>Location</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <!-- <tbody>
                        <c:forEach var="customer" items="${customers}">
                            <tr id="customerRow-${customer.customerId}">
                                <td>${customer.customerId}</td>
                                <td class="name">${customer.customerName}</td>
                                <td class="mobile">${customer.mobileNumber}</td>
                                <td class="location">${customer.customerLocation}</td>
                                <td>
                                    <a class="action-link edit-link text-primary mr-2" data-id="${customer.customerId}">Edit</a>
                                    <a class="action-link delete-link text-danger" data-id="${customer.customerId}">Delete</a>
                                </td>
                            </tr>
                        </c:forEach>
                         <tr id="noResultsRow" style="display: none;">
                            <td colspan="5" class="text-center">No customers found matching your search.</td>
                        </tr>
                    </tbody>-->
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" id="editCustomerModal" tabindex="-1" role="dialog" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="editCustomerForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCustomerModalLabel">Edit Customer</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="editCustomerId" name="customerId">
                        <div class="form-group">
                            <label for="editCustomerName">Name</label>
                            <input type="text" class="form-control" id="editCustomerName" name="customerName" required>
                        </div>
                        <div class="form-group">
                            <label for="editMobileNumber">Mobile Number</label>
                            <input type="text" class="form-control" id="editMobileNumber" name="mobileNumber" required pattern="[0-9]{10,15}">
                        </div>
                        <div class="form-group">
                            <label for="editCustomerLocation">Location</label>
                            <input type="text" class="form-control" id="editCustomerLocation" name="customerLocation" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <footer class="page-footer">
        <p>&copy; <script>document.write(new Date().getFullYear())</script> Billing System. All rights reserved.</p>
    </footer>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
    $(document).ready(initializePage);

    function initializePage() {
        setTimeout(fadeOutMessages, 3000);
        $("#customerSearchInput").on("keyup", handleCustomerSearchInputKeyup);
        $("#customerSuggestionsDropdown").on("click", ".suggestion-item", handleSuggestionItemClick);
        $(document).on("click", handleDocumentClickForSuggestions);
        $("#customerSearchInput").on("focus", handleCustomerSearchInputFocus);
        $("#customerTable").on("click", ".delete-link", handleDeleteLinkClick);
        $("#customerTable").on("click", ".edit-link", handleEditLinkClick);
        $("#editCustomerForm").on("submit", handleEditFormSubmit);
        getAndShowCustomers("");
    }
	
    
    function fadeOutMessages() {
        $("#successMessageDiv").fadeOut("slow");
        $("#errorMessageDiv").fadeOut("slow");
    }

    function showMyAlert(messageText, alertType) {
        var alertBoxArea = $("#ajaxAlertPlaceholder");
        var newAlertHtml = "";
        newAlertHtml += '<div class="alert alert-' + alertType + ' alert-dismissible fade show" role="alert">';
        newAlertHtml += messageText;
        newAlertHtml += '<button type="button" class="close" data-dismiss="alert" aria-label="Close">';
        newAlertHtml += '<span aria-hidden="true">&times;</span>';
        newAlertHtml += '</button>';
        newAlertHtml += '</div>';

        alertBoxArea.html(newAlertHtml);

        setTimeout(function fadeOutCurrentAlert() { 
            var currentAlert = alertBoxArea.find(".alert");
            currentAlert.fadeOut("slow", function removeCurrentAlert() { 
                currentAlert.remove();
            });
        }, 3000);
    }

    function fadeOutCurrentAlertForShowMyAlert() {
        var alertBoxArea = $("#ajaxAlertPlaceholder"); 
        var currentAlert = alertBoxArea.find(".alert");
        currentAlert.fadeOut("slow", removeCurrentAlertAfterFadeOut);
    }

    function removeCurrentAlertAfterFadeOut() {
        $(this).remove();
    }

    // Revised showMyAlert to use the named functions
    function showMyAlertRevised(messageText, alertType) {
        var alertBoxArea = $("#ajaxAlertPlaceholder");
        var newAlertHtml = "";
        newAlertHtml += '<div class="alert alert-' + alertType + ' alert-dismissible fade show" role="alert">';
        newAlertHtml += messageText;
        newAlertHtml += '<button type="button" class="close" data-dismiss="alert" aria-label="Close">';
        newAlertHtml += '<span aria-hidden="true">&times;</span>';
        newAlertHtml += '</button>';
        newAlertHtml += '</div>';

        alertBoxArea.html(newAlertHtml);
        setTimeout(fadeOutCurrentAlertFromRevisedShowMyAlert, 3000);
    }

    function fadeOutCurrentAlertFromRevisedShowMyAlert() {
        var alertBoxArea = $("#ajaxAlertPlaceholder"); 
        var currentAlert = alertBoxArea.find(".alert");
        currentAlert.fadeOut("slow", removeElementAfterFadeOut);
    }

    function removeElementAfterFadeOut() {
        $(this).remove(); 
    }
    
    function fetchAllCustomersAndPopulateTable() {
        $.ajax({
            url: "CustomerServlet?action=searchCustomersAjax",
            type: "GET",
            data: { query: "" },
            dataType: "json",
            success: function(customersFromServer) {
                populateCustomerTable(customersFromServer); 
                $("#customerSuggestionsDropdown").html("").hide();
            },
            error: function(xhr, status, error) {
                console.error("AJAX Error during initial customer load:", status, error, xhr.responseText);
                showMyAlertRevised("Failed to load customer list. Please try again later.", "danger");
                $("#customerTable tbody").html("");
                $("#noResultsRow").find('td').text("Error loading customer data.");
                $("#noResultsRow").show();
            }
        });
    }


    function handleCustomerSearchInputKeyup() {
        var searchInputValue = $("#customerSearchInput").val().trim();

        if (searchInputValue.length >= 1) {
            getAndShowCustomers(searchInputValue);
        }

        if (searchInputValue.length >= 1) {
            getAndShowCustomers(searchInputValue);
        } else {
        	getAndShowCustomers("");
            $("#customerSuggestionsDropdown").html("").hide();
        }
    }
    

    function getAndShowCustomers(searchText) {
        $.ajax({
            url: "CustomerServlet?action=searchCustomersAjax",
            type: "GET",
            data: { query: searchText },
            dataType: "json",
            success: function handleCustomerSearchSuccess(allCustomersFromServer) {
            	console.log(allCustomersFromServer);
                fillCustomerTable(allCustomersFromServer);
                fillSuggestionsBox(allCustomersFromServer, searchText);
            },
            error: function handleCustomerSearchError() {
                showMyAlertRevised("Oops! Something went wrong when searching.", "danger");
                $("#customerTable tbody").html("");
                $("#noResultsRow").show();
                $("#customerSuggestionsDropdown").html("").hide();
            }
        });
    }
    
    function populateCustomerTable(customersList) {
        var tableBodyElement = $("#customerTable tbody");
        tableBodyElement.html("");
        if (customersList && customersList.length > 0) {
            $("#noResultsRow").hide();
            customersList.forEach(function(customer) {
                var tableRowHtml =
                    '<tr id="customerRow-' + customer.customerId + '">' +
                        '<td>' + (customer.customerId || 'N/A') + '</td>' +
                        '<td class="name">' + (customer.customerName || 'N/A') + '</td>' +
                        '<td class="mobile">' + (customer.mobileNumber || 'N/A') + '</td>' +
                        '<td class="location">' + (customer.customerLocation || 'N/A') + '</td>' +
                        '<td>' +
                            '<a class="action-link edit-link text-primary mr-2" href="#" data-id="' + customer.customerId + '">Edit</a>' +
                            '<a class="action-link delete-link text-danger" href="#" data-id="' + customer.customerId + '">Delete</a>' +
                        '</td>' +
                    '</tr>';
                tableBodyElement.append(tableRowHtml);
            });
        } else {
            var message = $("#customerSearchInput").val().trim() ? "No customers found matching your search." : "No customers found.";
            $("#noResultsRow").find('td').text(message);
            $("#noResultsRow").show();
        }
    }
    
    function fillCustomerTable(customersList) {
        var tableBodyElement = $("#customerTable tbody");
        tableBodyElement.html("");

        if (customersList && customersList.length > 0) {
            $("#noResultsRow").hide();
            for (var i = 0; i < customersList.length; i++) {
                var oneCustomer = customersList[i];
                var tableRowHtml = "";
                tableRowHtml += '<tr id="customerRow-' + oneCustomer.customerId + '">';
                tableRowHtml += '<td>' + oneCustomer.customerId + '</td>';
                tableRowHtml += '<td class="name">' + oneCustomer.customerName + '</td>';
                tableRowHtml += '<td class="mobile">' + oneCustomer.mobileNumber + '</td>';
                tableRowHtml += '<td class="location">' + oneCustomer.customerLocation + '</td>';
                tableRowHtml += '<td>';
                tableRowHtml += '<a class="action-link edit-link text-primary mr-2" data-id="' + oneCustomer.customerId + '">Edit</a>';
                tableRowHtml += '<a class="action-link delete-link text-danger" data-id="' + oneCustomer.customerId + '">Delete</a>';
                tableRowHtml += '</td>';
                tableRowHtml += '</tr>';
                tableBodyElement.append(tableRowHtml);
            }
        } else {
            $("#noResultsRow").show();
        }
    }

    function fillSuggestionsBox(customersList, currentSearchText) {
        var suggestionsDiv = $("#customerSuggestionsDropdown");
        suggestionsDiv.html("");
        if (currentSearchText.length > 0 && customersList && customersList.length > 0) {
            var maxSuggestions = 7;
            for (var i = 0; i < customersList.length && i < maxSuggestions; i++) {
                var oneCustomer = customersList[i];
                var suggestionLinkHtml = "";
                suggestionLinkHtml += '<a href="#" class="list-group-item list-group-item-action suggestion-item" data-id="' + oneCustomer.customerId + '">';
                suggestionLinkHtml += oneCustomer.customerName + ' (' + oneCustomer.customerId + ')';
                suggestionLinkHtml += '</a>';
                suggestionsDiv.append(suggestionLinkHtml);
            }
            suggestionsDiv.show();
        } else {
            suggestionsDiv.hide();
        }
    }

    function handleSuggestionItemClick(event) {
        event.preventDefault();
        var selectedText = $(this).text();
        $("#customerSearchInput").val(selectedText);
        $("#customerSuggestionsDropdown").html("").hide();
    }

    function handleDocumentClickForSuggestions(event) {
        var targetElement = $(event.target);
        if (!targetElement.closest(".search-bar-container").length) {
            $("#customerSuggestionsDropdown").html("").hide();
        }
    }

    function handleCustomerSearchInputFocus() {
        var currentSearchText = $(this).val();
        if (currentSearchText.length >= 1) {
            getAndShowCustomers(currentSearchText);
        }
    }

    function handleDeleteLinkClick() {
        var customerIdToDelete = $(this).data("id");
        var confirmDelete = confirm("Are you sure you want to delete customer " + customerIdToDelete + "?");

        if (confirmDelete) {
            $.ajax({
                url: "http://localhost:8081/api/customers/{customerId}" + customerIdToDelete,
                type: "GET",
                dataType: "json",
                success: function handleDeleteSuccess(serverReply) {
                    if (serverReply.success) {
                        $("#customerRow-" + customerIdToDelete).remove();
                        showMyAlertRevised(serverReply.message, "success");
                        if ($("#customerTable tbody tr:not(#noResultsRow)").length === 0) {
                            $("#noResultsRow").show();
                        }
                    } else {
                        showMyAlertRevised(serverReply.message, "danger");
                    }
                },
                error: function handleDeleteError() {
                    showMyAlertRevised("Could not delete the customer. Please try again.", "danger");
                }
            });
        }
    }
    

    function handleEditLinkClick() {
        var customerIdToEdit = $(this).data("id");
        $.ajax({
            url: "CustomerServlet?action=getCustomerAjax&id=" + customerIdToEdit,
            type: "GET",
            dataType: "json",
            success: function handleGetCustomerSuccess(customerDataFromServer) {
                console.log(customerDataFromServer);
                if (customerDataFromServer && customerDataFromServer.customerId) {
                    $("#editCustomerId").val(customerDataFromServer.customerId);
                    $("#editCustomerName").val(customerDataFromServer.customerName);
                    $("#editMobileNumber").val(customerDataFromServer.mobileNumber);
                    $("#editCustomerLocation").val(customerDataFromServer.customerLocation);
                    $("#editCustomerModal").modal("show");
                } else {
                    showMyAlertRevised(customerDataFromServer.message || "Customer data not found.", "danger");
                }
            },
            error: function handleGetCustomerError() {
                showMyAlertRevised("Could not get customer details for editing.", "danger");
            }
        });
    }

    function handleEditFormSubmit(event) {
        event.preventDefault();
        var formDetails = $(this).serialize();
        $.ajax({
            url: "CustomerServlet?action=updateAjax",
            type: "POST",
            data: formDetails,
            dataType: "json",
            success: function handleUpdateSuccess(serverReply) {
                if (serverReply.success && serverReply.customer) {
                    $("#editCustomerModal").modal("hide");
                    showMyAlertRevised(serverReply.message, "success");

                    var updatedCustomerInfo = serverReply.customer;
                    var customerRowInTable = $("#customerRow-" + updatedCustomerInfo.customerId);

                    var nameCell = customerRowInTable.find(".name");
                    nameCell.text(updatedCustomerInfo.customerName);

                    var mobileCell = customerRowInTable.find(".mobile");
                    mobileCell.text(updatedCustomerInfo.mobileNumber);

                    var locationCell = customerRowInTable.find(".location");
                    locationCell.text(updatedCustomerInfo.customerLocation);
                } else {
                    showMyAlertRevised(serverReply.message, "danger");
                }
            },
            error: function handleUpdateError() {
                showMyAlertRevised("Could not update customer. Please try again.", "danger");
            }
        });
    }
    </script>
</body>
</html>