<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<%!
    private String escapeHtml(String input) {
        if (input == null) {
            return "";
        }
        return input.replace("&", "&amp;")
                    .replace("<", "&lt;")
                    .replace(">", "&gt;")
                    .replace("\"", "&quot;")
                    .replace("'", "&#x27;");
    }
%>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Add New Customer</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
         <div class="page-header">
             <h1 class="header-title">Billing System</h1>
         </div>
         <div class="content-wrapper">
            <div class="title-section">
                 <h2 class="page-title">Add New Customer</h2>
            </div>

             <%
                 String errorMessage = (String) request.getAttribute("errorMessage");
                 if (errorMessage == null) { errorMessage = request.getParameter("error"); }

                 if (errorMessage != null && !errorMessage.isEmpty()) {
             %>
                    <p style="color: red; margin-bottom: 15px;">Error: <%= escapeHtml(errorMessage) %></p>
             <%
                 }
             %>

            <form action="CustomerServlet" method="post" class="customer-form" id="addCustomerForm">
                <input type="hidden" name="action" value="add"/>

                <div class="form-group">
                    <label for="customerId" class="form-label">Customer ID:</label>
                    <input type="text" id="customerId" name="customerId" class="form-input" required>
                </div>
                <div class="form-group">
                    <label for="customerName" class="form-label">Customer Name:</label>
                    <input type="text" id="customerName" name="customerName" class="form-input" required>
                </div>
                <div class="form-group">
                    <label for="mobileNumber" class="form-label">Mobile Number:</label>
                    <input type="tel" id="mobileNumber" name="mobileNumber" class="form-input" required pattern="[0-9]{10}" title="Enter a 10-digit mobile number">
                </div>
                 <div class="form-group">
                    <label for="customerLocation" class="form-label">Location:</label>
                    <input type="text" id="customerLocation" name="customerLocation" class="form-input">
                </div>

                <div class="form-actions">
                    <button type="submit" class="submit-btn">Add Customer</button>
                    <button type="reset" class="reset-btn">Reset</button>
                    <a href="CustomerServlet" class="cancel-btn-link"><button type="button" class="cancel-btn">Cancel</button></a>
                </div>
            </form>
        </div>
        <footer class="page-footer">
             &copy; 2025 Billing System
        </footer>
    </div>
    
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script>
        // API endpoint for customer operations
        const API_BASE_URL = 'http://localhost:8081/api/customers'; 

        $(document).ready(function() {
            $('#addCustomerForm').on('submit', function(event) {
                event.preventDefault(); 
                const customerData = {
                    customerId: $('#customerId').val().trim(),
                    customerName: $('#customerName').val().trim(),
                    mobileNumber: $('#mobileNumber').val().trim(),
                    customerLocation: $('#customerLocation').val().trim()
                };
                if (!customerData.customerId || !customerData.customerName || !customerData.mobileNumber) {
                    showAlert('Customer ID, Name, and Mobile Number are required.', 'warning');
                    return;
                }
                
                console.log("Submitting customer data:", customerData);
                $.ajax({
                    url: API_BASE_URL, 
                    type: 'POST',
                    contentType: 'application/json',    
                    data: JSON.stringify(customerData), 
                    dataType: 'json',                   
                    success: function(response, textStatus, jqXHR) {
                        
                        console.log("Customer added successfully:", response);
                        showAlert('Customer "' + response.customerName + '" added successfully!', 'success');
                        $('#addCustomerForm')[0].reset(); 
                        $('#customerId').focus(); 
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.error("Error adding customer:", jqXHR.status, jqXHR.responseText, errorThrown);
                        let errorMessage = 'Error adding customer.';
                        if (jqXHR.responseJSON && jqXHR.responseJSON.message) {
                            errorMessage = jqXHR.responseJSON.message;
                        } else if (jqXHR.status === 400) {
                            
                            try {
                                const errData = JSON.parse(jqXHR.responseText);
                                if(errData && errData.message) errorMessage = errData.message;
                                else errorMessage = "Invalid data submitted (400). Please check your input. The Customer ID might already exist.";
                            } catch(e) {
                                if(jqXHR.responseText && jqXHR.responseText.length < 100) { 
                                    errorMessage = "Invalid data (400): " + jqXHR.responseText;
                                } else {
                                    errorMessage = "Invalid data submitted (400). Please check your input. The Customer ID might already exist.";
                                }
                            }
                        } else if (jqXHR.status === 0) {
                            errorMessage = 'Cannot connect to server. Please check network or if server is running.';
                        } else if (jqXHR.statusText) {
                            errorMessage = 'Error: ' + jqXHR.statusText + ' (Status: ' + jqXHR.status + ')';
                        }
                        showAlert(errorMessage, 'danger');
                    }
                });
            });
        });


        function showAlert(messageText, alertType) {
            const alertBoxArea = $("#alertPlaceholder");
            alertBoxArea.html(''); 
            const newAlertHtml =
                `<div class="alert alert-${alertType} alert-dismissible fade show" role="alert">
                    ${messageText}
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>`;
            alertBoxArea.html(newAlertHtml);
            setTimeout(function() {
                alertBoxArea.find(".alert").fadeOut("slow", function() { $(this).remove(); });
            }, 5000); 
        }
    </script>

</body>
</html>
